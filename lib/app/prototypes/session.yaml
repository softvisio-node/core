title: Session
roles: ["*"]

methods:
  check-authentication:
    title: Check authentcation

  signin:
    title: Signin
    description: |-
      If `credentials` parameter is specified - will try to sign in user using username and password, otherwise will try to sign in user, using currently used api token.

      **Returns**:

      -   `200`: Sign in successfully.

      -   `401`: Bad credentials.

      -   `403`: Not authorized.

      -   Any other status means bad request, internal or connection error. Refer to the response `statusText` property for more information.
    params:
      - name: credentials
        required: true
        schema:
          type: object
          properties:
            username: { type: string }
            password: { type: string }
            device_guid: { type: string, format: uuid }
          required: [username, password]
          additionalProperties: false

  authorize:
    title: Authorize session
    roles: [user]
    params:
      - name: password
        required: true
        schema: { type: string }

  signout:
    title: Signout
    roles: [user]

  signup:
    title: Signup
    roles: [guest]
    params:
      - name: fields
        required: true
        schema:
          type: object
          properties:
            username: { type: string }
            password: { type: string }
            email: { type: string }
            telegram_username: { type: string }
            device_guid: { type: string, format: uuid }
          required:
            - username

  send-confirmation-email:
    title: Send confirmation email
    params:
      - name: user_id
        description: User name or email.
        required: true
        schema:
          type: string

  confirm-email-by-token:
    title: Confirm user email using email confirmation token
    params:
      - name: token
        description: Email confirmation token.
        required: true
        schema:
          type: string

  send-password-recovery-email:
    title: Send password recovery email
    params:
      - name: user_id
        description: User name or email.
        required: true
        schema:
          type: string

  set-password-by-token:
    title: Set user password using password recovery token
    params:
      - name: token
        required: true
        schema:
          type: string
      - name: password
        required: true
        schema:
          type: string

  register-push-notifications-token:
    title: Register push notifications token
    params:
      - name: token
        required: true
        schema: { type: string }

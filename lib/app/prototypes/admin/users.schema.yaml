title: Application users management
permissions: [admin]

methods:
  read:
    title: Read users
    meta:
      type: read
      readMaxLimit: 100
      readDefaultOrderBy: [["name", "desc"]]
    params:
      - name: options
        schema:
          apiRead:
            id: { type: string, conditions: ["="], sortable: true }
            search: { type: string, conditions: ["like"] }
            name: { sortable: true }
            created: { sortable: true }
            enabled: { sortable: true }

  create:
    title: Create user
    params:
      - name: fields
        required: true
        schema:
          type: object
          properties:
            username: { type: string }
            password: { type: string }
            enabled: { type: boolean }
            permissions:
              type: object
              additionalProperties: { type: boolean }
            email: { type: string }
            telegram_name: { type: string }
          required:
            - username

  delete:
    title: Remove user
    params:
      - name: userId
        required: true
        schema:
          type: string

  setEnabled:
    title: Set user enabled
    params:
      - name: userId
        description: User id or name.
        required: true
        schema:
          type: string
      - name: enabled
        required: true
        schema:
          type: boolean

  setPassword:
    title: Set user password
    params:
      - name: userId
        description: User id or name.
        required: true
        schema:
          type: string
      - name: pasword
        schema:
          type: string

  getPermissions:
    title: Get user permissions
    params:
      - name: userId
        required: true
        schema:
          type: string

  setPermissions:
    title: Set user permissions
    params:
      - name: userId
        required: true
        schema:
          type: string
      - name: permissions
        required: true
        schema:
          type: object
          additionalProperties: { type: boolean }

  updatePermissions:
    title: Update user permissions
    params:
      - name: userId
        required: true
        schema:
          type: string
      - name: permissions
        required: true
        schema:
          type: object
          additionalProperties: { type: boolean }

  suggest:
    title: Suggest user name
    params:
      - name: options
        schema:
          type: object
          properties:
            where:
              type: object
              properties:
                name:
                  type: array
                  items:
                    - operator:
                        type: string
                        enum:
                          - like
                    - name:
                        type: string

  setUsername:
    title: Change user name
    params:
      - name: userId
        required: true
        schema:
          type: string
      - name: newUsername
        required: true
        schema:
          type: string
      - name: newPassword
        schema:
          type: string

  deleteSessions:
    title: Delete user sessions
    params:
      - name: userId
        required: true
        schema:
          type: string

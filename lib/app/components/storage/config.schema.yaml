- $id: config
  anyOf:
    - $ref: local
    - $ref: google

- $id: local
  type: object
  properties:
    listenPublicHttpServer: { type: boolean }
    listenPrivateHttpServer: { type: boolean }
    location: { type: string, format: kebab-case-root-or-absolute-file-path }

    locations: { $ref: locations }

    maxCacheSize: { type: integer, minimum: 1 }
    type: { const: local }

  additionalProperties: false
  required: [listenPublicHttpServer, listenPrivateHttpServer, location, maxCacheSize, locations, type]

- $id: google
  type: object
  properties:
    listenPublicHttpServer: { type: boolean }
    listenPrivateHttpServer: { type: boolean }
    location: { type: string, format: kebab-case-root-or-absolute-file-path }

    locations: { $ref: locations }

    maxCacheSize: { type: integer, minimum: 1 }
    type: { const: google }
    bucket: { type: string, format: kebab-case }
    serviceAccount:
      type: object
      properties:
        type: { type: string }
        project_id: { type: string }
        private_key_id: { type: string }
        private_key: { type: string }
        client_email: { type: string }
        client_id: { type: string }
        auth_uri: { type: string }
        token_uri: { type: string }
        auth_provider_x509_cert_url: { type: string }
        client_x509_cert_url: { type: string }

      additionalProperties: false
      required: [project_id, private_key, client_email, token_uri]

  additionalProperties: false
  required: [listenPublicHttpServer, listenPrivateHttpServer, location, maxCacheSize, locations, type, bucket, serviceAccount]

- $id: locations
  type: object
  propertyNames: { type: string, format: kebab-case-root-or-absolute-file-path }
  additionalProperties:
    type: object
    properties:
      private: { type: boolean }
      cacheControl: { type: ["null", string] }
      maxAge: { type: string, format: duration }
      inactiveMaxAge: { type: string, format: duration }
    additionalProperties: false
    required: [private]
  required: ["/"]

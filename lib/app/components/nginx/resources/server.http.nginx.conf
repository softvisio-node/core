upstream <%- id %>-<%- httpPort %> {
    zone                <%- id %>-<%- httpPort %>
                        1M;
    least_conn;
    keepalive           512; # max. number of non-active upstream connections
    keepalive_timeout   180s;

<% for ( const upstream of upstreams ) { -%>
    server  <%- upstream %>:<%- upstreamHttpPort %>;
<% } -%>
}

server {
<% if ( serverName ) { -%>
    server_name <%- serverName %>;

<% } -%>
<% if ( !listenIpFamily || listenIpFamily === 4 ) { -%>
    listen      *:<%- httpPort %>;
<% } -%>
<% if ( !listenIpFamily || listenIpFamily === 6 ) { -%>
    listen      [::]:<%- httpPort %>;
<% } -%>
<% if ( sslCertificate ) { -%>
<% if ( !listenIpFamily || listenIpFamily === 4 ) { -%>
    listen      *:<%- httpSslPort %> ssl;
<% } -%>
<% if ( !listenIpFamily || listenIpFamily === 6 ) { -%>
    listen      [::]:<%- httpSslPort %> ssl;
<% } -%>

    ssl_certificate         <%- sslCertificate %>;
    ssl_certificate_key     <%- sslCertificateKey %>;
<% } -%>

    client_max_body_size    <%- maxBodySize %>;

    location @backend {
        proxy_pass          http://<%- id %>-<%- httpPort %>;
<% if ( cacheEnabled ) { -%>
        proxy_cache         default;
<% if ( cacheBypass ) { -%>
        proxy_cache_bypass  $http_cache_control;
<% } -%>
<% if ( cacheStatus ) { -%>
        add_header          X-Upstream-Cache-Status $upstream_cache_status;
<% } -%>
<% } -%>
    }

    location / {
<% if ( sslCertificate ) { -%>
        set $redirect_to_https 0;

        if ( $https != "on" ) {
            set $redirect_to_https 1;
        }

        if ( $http_x_forwarded_proto = "https" ) {
            set $redirect_to_https 0;
        }

        if ( $redirect_to_https ) {
            return  301 https://$host$request_uri;
        }

<% } -%>
        error_page  418 = @backend;
        return      418;
    }
<% if ( privateHrrpServerUpstream ) { -%>

    location /.well-known/acme-challenge/ {
        rewrite             /.well-known/acme-challenge/(.*)    <%- acmeChallengesUrl %>/$1   break;

        proxy_pass          http://<%- privateHrrpServerUpstream %>;
    }
<% } -%>
}

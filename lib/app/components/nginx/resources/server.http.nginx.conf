upstream <%- id %>-<%- httpPort %> {
    zone                <%- id %>-<%- httpPort %>
                        1M;
    least_conn;
    keepalive           512; # max. number of non-active upstream connections
    keepalive_timeout   180s;

<% for ( const upstream of upstreams ) { -%>
    server  <%- upstream %>:<%- upstreamHttpPort %>;
<% } -%>
}

server {
    server_name <%- serverName %>;

<% if ( !listenIpFamily || listenIpFamily === 4 ) { -%>
    listen      *:<%- httpPort %><%- defaultServer ? " default_server" : "" %>;
<% } -%>
<% if ( !listenIpFamily || listenIpFamily === 6 ) { -%>
    listen      [::]:<%- httpPort %><%- defaultServer ? " default_server" : "" %>;
<% } -%>
<% if ( sslCertificate ) { -%>
<% if ( !listenIpFamily || listenIpFamily === 4 ) { -%>
    listen      *:<%- httpSslPort %> ssl<%- defaultServer ? " default_server" : "" %>;
<% } -%>
<% if ( !listenIpFamily || listenIpFamily === 6 ) { -%>
    listen      [::]:<%- httpSslPort %> ssl<%- defaultServer ? " default_server" : "" %>;
<% } -%>

    ssl_certificate         <%- sslCertificate %>;
    ssl_certificate_key     <%- sslCertificateKey %>;
<% } -%>

    client_max_body_size    <%- maxBodySize %>;

    location @backend {
        proxy_pass          http://<%- id %>-<%- httpPort %>;

        proxy_http_version  1.1;

        proxy_set_header    Host              $host;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header    Upgrade           $http_upgrade;
        proxy_set_header    Connection        $proxy_connection;

        proxy_hide_header   uwebsockets;
<% if ( cacheEnabled ) { -%>

        # cache
        proxy_cache             default;
        proxy_cache_revalidate  on;
        proxy_cache_lock        on;
<% if ( cacheBypass ) { -%>
        proxy_cache_bypass      $http_cache_control;
<% } -%>
<% if ( cacheStatus ) { -%>
        add_header              X-Upstream-Cache-Status $upstream_cache_status;
<% } -%>
<% } -%>
    }

    location / {
<% if ( sslCertificate ) { -%>
        set $redirect_to_https 0;

        if ( $https != "on" ) {
            set $redirect_to_https 1;
        }

        if ( $http_x_forwarded_proto = "https" ) {
            set $redirect_to_https 0;
        }

        if ( $redirect_to_https ) {
            return  301 https://$host$request_uri;
        }

<% } -%>
        error_page  418 = @backend;
        return      418;
    }
<% if ( acmeChallengesProxy ) { -%>

    location /.well-known/acme-challenge/ {
        proxy_pass  <%- acmeChallengesProxy %>;
    }
<% } -%>
}

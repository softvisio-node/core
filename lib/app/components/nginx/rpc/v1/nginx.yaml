title: Nginx

methods:
  get-certificates:
    title: Get TLS certificates
    params:
      - name: server_names
        required: true
        schema:
          anyOf:
            - { type: string, format: nginx-server-name }
            - { type: array, items: { type: string, format: nginx-server-name }, minItems: 1, uniqueItems: true }

  update-proxies:
    title: Update nginx proxies
    requirePersistentConnection: true
    params:
      - name: app_id
        required: true
        schema:
          type: string
          format: kebab-case
      - name: update_id
        required: true
        schema:
          type: integer
      - name: proxies
        schema:
          anyOf:
            - type: "null"
            - type: object
              propertyNames: { type: string, format: kebab-case }
              additionalProperties:
                type: object
                properties:
                  upstreamPort: { type: integer, format: ip-port }
                  upstreamProxyProtocol: { type: boolean }

                  serverNames:
                    anyOf:
                      - type: "null"
                      - { type: string, format: nginx-server-name }
                      - { type: array, items: { type: string, format: nginx-server-name }, uniqueItems: true }

                  servers:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      properties:
                        port: { type: integer, format: ip-port }
                        type: { enum: [http, tcp, udp] }
                        proxyProtocol: { type: boolean }
                        ssl: { type: boolean }
                        maxBodySize: { type: string, format: digital-size }
                        cacheEnabled: { type: boolean }
                        cacheBypass: { type: boolean }
                        httpsRedirectPort:
                          anyOf:
                            - type: "null"
                            - { type: integer, format: ip-port }
                        hstsMaxAge:
                          anyOf:
                            - type: "null"
                            - { type: string, format: interval }
                        hstsSubdomains: { type: boolean }

                      additionalProperties: false
                      required: [port]

                additionalProperties: false
                required: [upstreamPort, servers]

title: Nginx

methods:
  get-certificates:
    title: Get TLS certificates
    params:
      - name: server_names
        required: true
        schema:
          anyOf:
            - { type: string, format: nginx-server-name }
            - { type: array, items: { type: string, format: nginx-server-name }, minItems: 1, uniqueItems: true }

  add-proxy:
    title: Add nginx proxy
    persistentConnectionRequired: true
    params:
      - name: proxy_id
        required: true
        schema:
          type: string
          format: kebab-case
      - name: proxy_options
        required: true
        schema:
          type: object
          properties:
            upstreamPort: { type: integer, format: ip-port }
            upstreamProxyProtocol: { type: boolean }

            serverNames:
              anyOf:
                - type: "null"
                - { type: string, format: nginx-server-name }
                - { type: array, items: { type: string, format: nginx-server-name }, uniqueItems: true }

            servers:
              type: array
              minItems: 1
              items:
                type: object
                properties:
                  port: { type: integer, format: ip-port }
                  type: { enum: [http, tcp, udp] }
                  proxyProtocol: { type: boolean }
                  ssl: { type: boolean }
                  maxBodySize: { type: string, format: digital-size }
                  cacheEnabled: { type: boolean }
                  cacheBypass: { type: boolean }
                  httpsRedirectPort:
                    anyOf:
                      - type: "null"
                      - { type: integer, format: ip-port }
                  hstsMaxAge:
                    anyOf:
                      - type: "null"
                      - { type: string, format: interval }
                  hstsSubdomains: { type: boolean }

                additionalProperties: false
                required: [port]

          additionalProperties: false
          required: [upstreamPort, servers]

  delete-upstream:
    title: Delete nginx proxy upstream
    persistentConnectionRequired: true

  set-server-names:
    title: Set server names
    persistentConnectionRequired: true
    params:
      - name: server_names
        required: true
        schema:
          anyOf:
            - { type: "null" }
            - { type: string, format: nginx-server-name }
            - { type: array, items: { type: string, format: nginx-server-name }, uniqueItems: true }

  add-server-names:
    title: Add server names
    persistentConnectionRequired: true
    params:
      - name: server_names
        required: true
        schema:
          anyOf:
            - { type: "null" }
            - { type: string, format: nginx-server-name }
            - { type: array, items: { type: string, format: nginx-server-name }, uniqueItems: true }

  delete-server-names:
    title: Delete server names
    persistentConnectionRequired: true
    params:
      - name: server_names
        required: true
        schema:
          anyOf:
            - { type: "null" }
            - { type: string, format: nginx-server-name }
            - { type: array, items: { type: string, format: nginx-server-name }, uniqueItems: true }

title: Session

methods:
  init-session:
    title: Init sessions
    params:
      - name: options
        schema:
          type: object
          properties:
            locale:
              anyOf:
                - type: "null"
                - { type: string, format: locale }
            locales:
              anyOf:
                - type: "null"
                - { type: array, item: { type: string, format: locale }, uniqueItem: true }

          additionalProperties: false

  check-session:
    title: Check session status

  sign-in:
    title: Sign in
    params:
      - name: credentials
        required: true
        schema:
          anyOf:
            - type: object
              properties:
                email: { type: string, format: email }
                password: { type: string }
              additionalProperties: false
              required: [email, password]
            - type: object
              properties:
                oauth_provider: { enum: [google, facebook, github] }
                oauth_code: { type: string }
                oauth_redirect_uri: { type: string, format: uri }
              additionalProperties: false
              required: [oauth_provider, oauth_code, oauth_redirect_uri]

  authorize:
    title: Authorize session
    permission: users
    params:
      - name: credentials
        required: true
        schema:
          anyOf:
            - type: object
              properties:
                password: { type: string }
              additionalProperties: false
              required: [password]
            - type: object
              properties:
                oauth_provider: { enum: [google, facebook, github] }
                oauth_code: { type: string }
                oauth_redirect_uri: { type: string, format: uri }
              additionalProperties: false
              required: [oauth_provider, oauth_code, oauth_redirect_uri]

  sign-out:
    title: Sign out
    permission: users

  sign-up:
    title: Sign up
    permission: guests
    params:
      - name: email
        required: true
        schema:
          anyOf:
            - { type: string, format: email }
            - type: object
              properties:
                oauth_provider: { enum: [google, facebook, github] }
                oauth_code: { type: string }
                oauth_redirect_uri: { type: string, format: uri }
              additionalProperties: false
              required: [oauth_provider, oauth_code, oauth_redirect_uri]
      - name: fields
        schema:
          type: object
          properties:
            password: { type: string }
            locale: { type: string }
          additionalProperties: false

  send-confirmation-email:
    title: Send confirmation email

  confirm-email-by-token:
    title: Confirm user email using email confirmation token
    params:
      - name: token
        description: Email confirmation token.
        required: true
        schema:
          type: string

  send-password-recovery-email:
    title: Send password recovery email
    params:
      - name: email
        required: true
        schema: { type: string, format: email }

  set-password-by-token:
    title: Set user password using password recovery token
    params:
      - name: token
        required: true
        schema:
          type: string
      - name: password
        required: true
        schema:
          type: string

  register-push-notifications-token:
    title: Register push notifications token
    params:
      - name: token
        required: true
        schema: { type: string }

  get-acl-permissions:
    title: Get ACL permissions
    permission: users
    params:
      - name: acl_id
        required: true
        schema: { type: string, format: int64 }

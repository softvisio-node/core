type: object
properties:
  root:
    type: object
    properties:
      email: { type: string, format: email }
      password: { type: ["null", string] }
      telegramUsername:
        anyOf:
          - { type: "null" }
          - { type: string, format: telegram-username }
    required: [email, password, telegramUsername]
    additionalProperties: false

  frontend:
    type: object
    properties:
      maxApiRequestLength: { type: integer, minimum: 1 }
      maxUploadFileSize: { type: integer, minimum: 1 }
      idleTimeout: { type: integer, minimum: 0 }
      sendPingsAutomatically: { type: boolean }
      compress:
        anyOf:
          - { type: boolean }
          - { type: integer }
    required: [maxApiRequestLength, maxUploadFileSize, idleTimeout, sendPingsAutomatically, compress]
    additionalProperties: false

  locales: { type: array, items: { type: string }, minItems: 1, uniqueItems: true }
  defaultLocale: { type: string }
  currency: { type: string }

  frontendUrl: { type: string, format: uri }
  passwordsStrength: { enum: [weak, normal, strong] }
  signupEnabled: { typs: boolean }
  newUserEnabled: { typs: boolean }
  defaultGravatarImage:
    anyOf:
      - { enum: ["404", mp, identicon, monsterid, wavatar, retro, robohash, blank] }
      - { type: string, format: email }
      - { type: string, format: uri }
  defaultGravatarEncoded: { typs: string }

  authcachemaxsize: { type: integer, minimum: 0 }
  authCacheLastActivityDropInterval: { type: integer, minimum: 10_000 } # ms
  sessionMaxAge: { type: integer, minimum: 60_000 } # ms
  authorizedSessionMaxAge: { type: integer, minimum: 60_000 } # ms
  actionTokenMaxAge: { type: integer, minimum: 60_000 } # ms
  aclCacheMaxSize: { type: integer, minimum: 0 }
  apiCallLogCacheDropInterval: { type: integer, minimum: 10_000 } # ms

  argon2:
    type: object
    properties:
      preset: { enum: [default] }
      type: { enum: [argon2d, argon2i, argon2id] }
      timeCost: { type: integer, minimum: 2, maximum: 4_294_967_295 }
      parallelism: { type: integer, minimum: 1, maximum: 16_777_215 }
      memoryCost: { type: integer, minimum: 1_024, maximum: 4_294_967_295 }
      saltLength: { type: integer, minimum: 16 }
      hashLength: { type: integer, minimum: 4, maximum: 4_294_967_295 }
    additionalProperties: false

  oauth:
    type: object
    properties:
      google:
        type: object
        properties:
          clientId: { type: ["null", string] }
          clientSecret: { type: ["null", string] }
        required: [clientId, clientSecret]
        additionalProperties: false

      facebook:
        type: object
        properties:
          clientId: { type: ["null", string] }
          clientSecret: { type: ["null", string] }
        required: [clientId, clientSecret]
        additionalProperties: false

      github:
        type: object
        properties:
          clientId: { type: ["null", string] }
          clientSecret: { type: ["null", string] }
        required: [clientId, clientSecret]
        additionalProperties: false
    required: [google, facebook, github]
    additionalProperties: false

  roles:
    anyOf:
      - { type: "null" }
      - type: object
        additionalProperties:
          type: object
          properties:
            name: { type: string }
            description: { type: string }
            default: { type: boolean }
          required: [name, description, default]
          additionalProperties: false

  acl:
    anyOf:
      - { type: "null" }
      - type: object
        properties:
          types:
            type: object
            additionalProperties:
              type: object
              properties:
                roles:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      name: { type: string }
                      description: { type: string }
                      permissions: { type: object, additionalProperties: { type: boolean } }
                    required: [name, description]
              additionalProperties: false
          objectTypes:
            type: object
            additionalPropertoes:
              type: object
              properties:
                isAclObject: { const: true }
                resolver: { type: [string, "null"] }
              additionalProperties: false
        additionalProperties: false

additionalProperties: false
required:
  - root
  - frontend

  - locales
  - defaultLocale
  - currency

  - frontendUrl
  - passwordsStrength
  - signupEnabled
  - newUserEnabled
  - defaultGravatarImage
  - defaultGravatarEncoded

  - authcachemaxsize
  - authCacheLastActivityDropInterval
  - sessionMaxAge
  - authorizedSessionMaxAge
  - actionTokenMaxAge
  - aclCacheMaxSize
  - apiCallLogCacheDropInterval

  - argon2

  - oauth

  - roles

  - acl

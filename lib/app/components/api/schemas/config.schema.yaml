type: object
properties:
  root:
    type: object
    properties:
      email: { type: string, format: email }
      password: { type: ["null", string] }

    additionalProperties: false
    required: [email, password]

  frontend:
    type: object
    properties:
      enabled: { type: boolean }
      maxParallelCallsPerClient:
        anyOf:
          - type: "null"
          - { type: integer, minimum: 1 }
      maxApiRequestLength: { type: integer, minimum: 1 }
      maxUploadFileSize: { type: integer, minimum: 1 }
      idleTimeout: { type: integer, minimum: 0 }
      sendPingsAutomatically: { type: boolean }
      compress:
        anyOf:
          - type: "null" # use server default
          - type: boolean
          - { type: integer, minimum: 0 }

    additionalProperties: false
    required: [enabled, maxParallelCallsPerClient, maxApiRequestLength, maxUploadFileSize, idleTimeout, sendPingsAutomatically, compress]

  locales: { type: array, items: { type: string }, minItems: 1, uniqueItems: true }
  defaultLocale: { type: string }
  currency: { type: string }

  frontendUrl: { type: string, format: uri }
  passwordsStrength: { enum: [weak, normal, strong] }
  signupEnabled: { typs: boolean }
  newUserEnabled: { typs: boolean }
  defaultGravatarImage:
    anyOf:
      - { enum: ["404", mp, identicon, monsterid, wavatar, retro, robohash, blank] }
      - { type: string, format: email }
      - { type: string, format: uri }
  defaultGravatarEncoded: { typs: string }

  userTokensCacheMaxSize: { type: integer, minimum: 1 }
  userSessionsCacheMaxSize: { type: integer, minimum: 1 }

  userTokenLength: { type: integer, minimum: 6 }
  userSessionTokenLength: { type: integer, minimum: 6 }
  userActionTokenLength: { type: integer, minimum: 6 }

  sessionMaxAge: { type: integer, minimum: 60_000 } # ms
  authorizedSessionMaxAge: { type: integer, minimum: 60_000 } # ms
  actionTokenMaxAge: { type: integer, minimum: 60_000 } # ms
  aclCacheMaxSize: { type: integer, minimum: 0 }

  oauth:
    type: object
    properties:
      google:
        anyOf:
          - type: "null"
          - type: object
            properties:
              clientId: { type: ["null", string] }
              clientSecret: { type: ["null", string] }
            additionalProperties: false
            required: [clientId, clientSecret]

      facebook:
        anyOf:
          - type: "null"
          - type: object
            properties:
              clientId: { type: ["null", string] }
              clientSecret: { type: ["null", string] }
            additionalProperties: false
            required: [clientId, clientSecret]

      github:
        anyOf:
          - type: "null"
          - type: object
            properties:
              clientId: { type: ["null", string] }
              clientSecret: { type: ["null", string] }
            required: [clientId, clientSecret]
            additionalProperties: false

    additionalProperties: false
    required: [google, facebook, github]

  acl:
    type: object
    propertyNames: { type: string, format: kebab-case }
    additionalProperties:
      type: object
      propertyNames: { type: string, format: kebab-case }
      additionalProperties:
        type: object
        properties:
          name: { type: string }
          description: { type: string }
          permissions: { type: array, items: { type: string }, minItems: 1, uniqueItems: true }
        required: [name, description, permissions]
      minProperties: 1 # at least 1 role is required
    minProperties: 1 # at least 1 acl type is required

additionalProperties: false
required:
  - root
  - frontend

  - locales
  - defaultLocale
  - currency

  - frontendUrl
  - passwordsStrength
  - signupEnabled
  - newUserEnabled
  - defaultGravatarImage
  - defaultGravatarEncoded

  - userTokensCacheMaxSize
  - userSessionsCacheMaxSize

  - userTokenLength
  - userSessionTokenLength
  - userActionTokenLength

  - sessionMaxAge
  - authorizedSessionMaxAge
  - actionTokenMaxAge
  - aclCacheMaxSize

  - oauth

  - acl

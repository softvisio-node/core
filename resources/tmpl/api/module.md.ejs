# <%- module.namespace %>

<%- module.summary %>
<% if (module.description) { -%>

<%- module.description %>
<% } -%>

-   [Methods](#methods)
<% for ( let method of Object.keys(module.methods).sort().map(id => module.methods[id]) ) { -%>
<% if (method.deprecated) { -%>
    -   [~~<%- method.name %>~~ `[deprecated]`](#<%- `${method.markdownId}` %>)<%- method.summary ? ` - ${method.summary}` : "" %>
<% } else { -%>
    -   [<%- method.name %>](#<%- method.markdownId %>)<%- method.summary ? ` - ${method.summary}` : "" %>
<% } -%>
<% } -%>

<a id="methods"></a>

# Methods
<% for ( let method of Object.keys(module.methods).sort().map(id => module.methods[id]) ) { -%>

<a id="<%- method.markdownId %>"></a>

<% if (method.deprecated) { -%>
## ~~<%- method.name %>~~ `[deprecated]`
<% } else { -%>
## <%- method.name %>
<% } -%>
<% if (method.summary) { -%>

<%- method.summary %>
<% } -%>

<!-- prettier-ignore -->
```js
const res = await api.call( "<%- method.id %>"<%- method.markdownParams %> );
```
<% if (method.description) { -%>

<%- method.description %>
<% } -%>

**Permissions**

<% for ( let permission of method.permissions ) { -%>
<% if ( permission === "*" ) { -%>
-   "\*" - any connected user;
<% } else if ( permission === "guest" ) { -%>
-   "guest" - any guest (not-authenticated) user;
<% } else if ( permission === "user" ) { -%>
-   "user" - any authenticated user;
<% } else if ( permission === "root" ) { -%>
-   "root" - root user;
<% } else { -%>
-   "<%- permission %>";
<% } -%>
<% } -%>

**Parameters**
<% if (!method.spec.params) { -%>

Method require no parameters.
<% } else { -%>
<% for ( let param of method.spec.params ) { -%>

-   **<%- param.name %>** `[<%- !param.required ? "not " : "" %>required]`<%- param.summary ? ` - ${param.summary}` : "" %>
<% if (param.description) { -%>

<%- param.description %>
<% } -%>

    <!-- prettier-ignore -->
    ```yaml
<%- param.markdownSchema %>
    ```
<% } -%>
<% } -%>
<% } -%>

# <%- options.type.toUpperCase() %> v<%- version %>
<% for ( const module of modules ) { -%>

## <%- module.title %>
<% if (module.description) { -%>

<%- module.description %>
<% } -%>

Methods:

<% for ( let method of Object.values( module.methods ).filter( method => !method.private ) ) { -%>
<% if (method.deprecated) { -%>
-   [~~<%- method.title %>~~ `[deprecated]`](#<%- method.markdownId %>)
<% } else { -%>
-   [<%- method.title %>](#<%- method.markdownId %>)
<% } -%>
<% } -%>
<% for ( let method of Object.values( module.methods ).filter( method => !method.private ) ) { -%>

<% if (method.deprecated) { -%>
### ~~<%- method.title %>~~ `[deprecated]`
<% } else { -%>
### <%- method.title %>
<% } -%>

<!-- tabs:start -->

#### **JavaScript**

<!-- prettier-ignore -->
```javascript
const res = await api.call( "<%- method.id %>"<%- method.markdownParams %> );
```

#### **Shell**

<!-- prettier-ignore -->
```shell
curl \
    -X POST \
    -H "Authorization: Bearer <YOUR-API-TOKEN>" \
    -H "Content-Type: application/json" \
    -d '[...PARAMETERS]' \
    "https://api.domain.com<%- method.id %>"
```

<!-- tabs:end -->
<% if (method.description) { -%>

<%- method.description %>
<% } -%>
<% if ( options.type === "api" ) { -%>

**Permissions:** <%- method.permissions.map( item => `\`${item}\``).join(", ") %>
<% } -%>
<% if ( method.spec.params ) { -%>

**Parameters:**
<% for ( let param of method.spec.params ) { -%>

-   **`<%- param.name %><%- param.required ? "" : "?" %>`** <<%- resolveParamType(param.schema.type) %>\><%- param.description ? " " + param.description.replaceAll( /^/gm, " ".repeat( 4 ) ).replaceAll(/^ +$/gm, "").trim() : "" %>

    <!-- prettier-ignore -->
    ```yaml
<%- param.markdownSchema %>
    ```
<% } -%>
<% } -%>
<% } -%>
<% } -%>

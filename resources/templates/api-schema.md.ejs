# <%- generator.schema.type.toUpperCase() %> <%- version %>

### API connect URLs

-   API HTTP URL: `<%- httpUrl %>`
-   API WebSockets URL: `<%- webSocketsUrl %>`

<!-- tabs:start -->

#### **WebSockets**

<!-- prettier-ignore -->
```javascript
import Api from "@softvisio/core/api";

const api = Api.new( "<%- webSocketsUrl %>" )
```

#### **HTTP**

<!-- prettier-ignore -->
```javascript
import Api from "@softvisio/core/api";

const api = Api.new( "<%- httpUrl %>" )
```

<!-- tabs:end -->
<% for ( const module of modules ) { -%>

## <%- module.title %>
<% if ( module.description ) { -%>

<%- module.description %>
<% } -%>
<% for ( let method of Object.values( module.methods ).filter( method => !method.private ) ) { -%>

<% if ( method.deprecated ) { -%>
### ~~<%- method.title %>~~ `[deprecated]`
<% } else { -%>
### <%- method.title %>
<% } -%>
<% if ( generator.schema.type === "api" && method.permission ) { -%>

Method access permission: "<%- method.permission %>".
<% } -%>

<!-- tabs:start -->

#### **JavaScript**

<!-- prettier-ignore -->
```javascript
const res = await api.call( "<%- method.id %>"<%- method.markdownSignature ? ", " + method.markdownSignature : "" %> );
```

#### **Shell**

<!-- prettier-ignore -->
```shell
<% if ( method.markdownSignature ) { -%>
curl \
    -X POST \
    -H "Authorization: Bearer <YOUR-API-TOKEN>" \
    -H "Content-Type: application/json" \
    -d '[<%- method.markdownSignature %>]' \
    "<%- httpUrl %><%- method.id.substr( 1 ) %>"
<% } else { -%>
curl \
    -H "Authorization: Bearer <YOUR-API-TOKEN>" \
    "<%- httpUrl %><%- method.id.substr( 1 ) %>"
<% } -%>
```

<!-- tabs:end -->
<% if ( method.spec.params ) { -%>

<% for ( let param of method.spec.params ) { -%>
-   `<%- param.name %><%- param.required ? "" : "?" %>`<%- await generator.getMethodParamDescription( method, param ) %>
<% } -%>
<% } -%>
<% if ( method.description ) { -%>

<%- method.description %>
<% } -%>
<% } -%>
<% } -%>

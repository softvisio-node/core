# https://spec.open-rpc.org/#content-descriptor-object

openrpcSpec:
    type: object
    properties:
        openrpc: { type: string }

        info: { $ref: '/#/components/infoObject' }

        servers:
            type: array

        methods:
            type: array
            items:
                type: object
                properties:
                    name: { type: string }
                    summary: { type: string }
                    description: { type: string }
                    externalDocs: { $ref: '/#/components/externalDocumentationObject' }
                    required: { type: boolean }
                    deprecated: { type: boolean }
                    paramStructure: { type: 'string', enum: ['by-position'] }
                    params:
                        type: array
                        items:
                            - anyOf:
                                  - $ref: '/#/components/referenceObject'
                                  - $ref: '/#/components/contentDescriptorObject'
                required: [name, summary]

        components: { $ref: '/#/components/componentsObject' }

    required: [openrpc, info]

openrpcComponents:
    type: object
    properties:
        openrpc: { type: string }
        info: { $ref: '/#/components/infoObject' }
        components: { $ref: '/#/components/componentsObject' }
    required: [openrpc, info]

components:
    infoObject:
        type: object
        properties:
            title: { type: string }
            description: { type: string }
            termsOfService: { type: string }
            conttact: { $ref: '/#/components/contactObject' }
            license: { $ref: '/#/components/licenseObject' }
            version: { type: string }
        required: [title, version]

    componentsObject:
        type: ['null', object]
        properties:
            contentDescriptors:
                type: ['null', object]
                additionalProperties: { $ref: '/#/components/contentDescriptorObject' }
            schemas:
                type: ['null', object]
                additionalProperties: { $ref: '/#/components/schemaObject' }
            examples: { type: ['null', object] }
            links: { type: ['null', object] }
            errors: { type: ['null', object] }
            examplePairingObjects: { type: ['null', object] }
            tags:
                type: ['null', object]
                additionalProperties: { $ref: '/#/components/tagObject' }
        additionalProperties: false

    referenceObject:
        type: object
        properties:
            $ref: { type: string }
        required: [$ref]
        additionalProperties: false

    contentDescriptorObject:
        type: object
        properties:
            name: { type: string }
            summary: { type: string }
            description: { type: string }
            required: { type: boolean }
            schema: {} # TODO
        required: [name, schema]

    externalDocumentationObject:
        type: object
        properties:
            description: { type: string }
            url: { type: string }
        required: [url]

    tagObject:
        type: object
        properties:
            name: { type: string }
            summary: { type: string }
            description: { type: string }
            externalDocs: { $ref: '/#/components/externalDocumentationObject' }
        required: [name]

    schemaObject: # TODO
        type: object

    contactObject:
        type: object
        properties:
            name: { type: string }
            url: { type: string }
            email: { type: string }

    licenseObject:
        type: object
        properties:
            name: { type: string }
            url: { type: string }

# index
- $id: index
  type: object
  properties:
    emits:
      type: array
      items:
        anyOf:
          - { const: "*" }
          - { type: string, format: kebab-case-path }
  additionalProperties: false

# module
- $id: module
  type: object
  properties:
    title: { $ref: "components#/title" }
    description: { $ref: "components#/description" }
    roles: { $ref: "components#/roles" }
    emits: { type: array, items: { type: string, format: kebab-case-path } }

    methods:
      type: object
      additionalProperties:
        type: object
        properties:
          title: { $ref: "components#/title" }
          description: { $ref: "components#/description" }
          deprecated: { type: boolean }
          private: { type: boolean }
          roles: { $ref: "components#/roles" }
          authorizationRequired: { type: "boolean" }
          persistentConnectionRequired: { type: "boolean" }
          logApiCalls: { type: boolean }
          activeRequestsLimit: { type: integer, minimum: 0 }
          activeRequestsUserLimit: { type: integer, minimum: 0 }
          params:
            params:
            type: array
            minItems: 1
            items:
              type: object
              properties:
                name: { type: string, format: snake-case }
                description: { $ref: "components#/desc" }
                required: { type: boolean }
                schema: { type: object }
              required: [name, schema]
              additionalProperties: false
        required: [title]
        additionalProperties: false

  required: [title]
  additionalProperties: false

# shared components
- $id: components
  title:
    type: string

  description:
    type: string

  roles:
    anyOf:
      - type: array
        items:
          - const: "*"
      - type: array
        items:
          type: string
          format: kebab-case
        minItems: 1

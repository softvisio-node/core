# module
- $id: module
  type: object
  properties:
    summary: { type: string }
    description: { type: string }

    _module: { $ref: 'components#/module' }
    _id: { type: string }
    _name: { type:string }
    _members: { type: object }
  required: [summary, _module, _id, _name, _members]
  additionalProperties: false

# function
- $id: function
  type: object
  properties:
    function: { type: string }
    summary: { type: string }
    description: { type: string }
    ignored: { type: 'boolean' }
    deprecated: { type: 'string' }
    async: { type: 'boolean' }
    throws: { $ref: 'components#/throws' }
    params: { $ref: 'components#/params' }

    _module: { $ref: 'components#/module' }
    _id: { type: string }
    _name: { type: string }
    _idFunction: { type: boolean }
    _memberOf: { type: string }

  required: [function, summary, _module, _id, _name, _isFunction, _memberOf]
  additionalProperties: false

# class
- $id: class
  type: object
  properties:
    class: { type: string }
    summary: { type: string }
    description: { type: string }
    ignored: { type: boolean }
    deprecated: { type: 'string' }
    extends:
      type: array
      items: { type: string }
      minItems: 1
    events: { $ref: 'components#/events' }
    permissions: { $ref: 'components#/permissions' }

    _module: { $ref: 'components#/module' }
    _id: { type: string }
    _name: { type: string }
    _members: { type: object }

  required: [class, summary, _module, _id, _name, _members]
  additionalProperties: false

# property
- $id: property
  type: object
  properties:
    property: { type: string }
    summary: { type: string }
    description: { type: string }
    ignored: { type: boolean }
    deprecated: { type: 'string' }
    static: { type: boolean }

    _module: { $ref: 'components#/module' }
    _id: { type: string }
    _name: { type: string }
    _isProperty: { type: boolean }
    _memberOf: { type: string }
    _access: { $res: 'components#/access' }

  required: [property, summary, _module, _id, _name, _isProperty, _memberOf, _access]
  additionalProperties: false

# method
- $id: method
  type: object
  properties:
    method: { type: string }
    summary: { type: string }
    description: { type: string }
    ignored: { type: boolean }
    deprecated: { type: 'string' }
    static: { type: boolean }
    async: { type: 'boolean' }
    skipParamsValidation: { type: 'boolean' }
    permissions: { $ref: 'components#/permissions' }
    throws: { $ref: 'components#/throws' }
    params: { $ref: 'components#/params' }

    _module: { $ref: 'components#/module' }
    _id: { type: string }
    _name: { type: string }
    _isMethod: { type: boolean }
    _memberOf: { type: string }
    _access: { $res: 'components#/access' }
    _inheritedFrom: { type: string }
    _overrides: { type: string }

  required: [method, summary, _module, _id, _name, _isMethod, _memberOf, _access]
  additionalProperties: false

- $id: components
  module:
    type: object
    properties:
      id: { type: string }
      path: { type: string }
      name: { type: string }
      namespaceId: { type: ['null', string] }
    required: [id, path, name, namespaceId]
    additionalProperties: false

  access:
    type: string
    enum: [private, protected, public]

  permissions:
    type: array
    items:
      type: string
      pattern: '^([!@*]|[a-z-]+)$'

  # TODO
  throws:
    type: array

  # TODO
  events:
    type: array

  params:
    type: array
    minItems: 1
    items:
      type: object
      properties:
        name: { type: string }
        summary: { type: string }
        description: { type: string }
        required: { type: boolean }
        schema: { type: object }
      required: [name, schema]
      additionalProperties: false

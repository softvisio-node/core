type: object
properties:
  module: { type: string, format: kebab-case }

  type:
    anyOf:
      - { type: string, enum: [postgresql, sqlite] }
      - { type: array, items: { type: string, enum: [postgresql, sqlite] }, minItems: 1, uniqueItems: true }

  patch:
    anyOf:
      - type: "null"
      - { type: integer, minimum: 1 }

  emits:
    anyOf:
      - type: "null"
      - { type: array, items: { type: string, format: glob-pattern }, uniqueItems: true }

  locks:
    anyOf:
      - type: "null"
      - { type: array, items: { type: string, format: kebab-case-relative-file-path }, uniqueItems: true }

  cron:
    anyOf:
      - type: "null"
      - type: object
        propertyNames: { type: string, format: kebab-case }
        additionalProperties:
          type: object
          properties:
            cron: { type: string, format: cron }
            timezone: { type: ["null", string] }
            query:
              anyOf:
                - type: string
                - { type: array, items: { type: string }, minItems: 1, uniqueItems: true }
            runMissed: { type: boolean }

          additionalProperties: false
          required: [cron, query]

additionalProperties: false
required: [module, type, patch]

- $id: app
  type: object
  properties:
    locales: { type: object }
    defaultLocale: { type: string }
    currency: { type: string }

    apiEnabled: { type: boolean }
    rpcEnabled: { type: boolean }
    notificationsEnabled: { type: boolean }
    threadsEnabled: { type: boolean }
    privateHttpServerEnabled: { type: boolean }
    privateHttpServerAddress: { type: string, format: ip-address }
    privateHttpServerPort: { type: number, format: ip-port }
    publicHttpServerEnabled: { type: boolean }
    publicHttpServerAddress: { type: string, format: ip-address }
    publicHttpServerPort: { type: number, format: ip-port }
  required:
    - locales
    - defaultLocale
    - currency

    - apiEnabled
    - rpcEnabled
    - notificationsEnabled
    - threadsEnabled
    - privateHttpServerEnabled
    - privateHttpServerAddress
    - privateHttpServerPort
    - publicHttpServerEnabled
    - publicHttpServerAddress
    - publicHttpServerPort

- $id: api
  type: object
  properties:
    # settings
    signupEnabled: { type: boolean, default: true }
    newUserEnabled: { type: boolean }
    defaultGravatarImage:
      anyOf:
        - { enum: ["404", mp, identicon, monsterid, wavatar, retro, robohash, blank] }
        - { type: string, format: email }
        - { type: string, format: uri }
    authCacheMaxSize: { type: integer, minimum: 0 }
    authCacheLastActivityDropInterval: { type: integer, minimum: 10_000 } # ms
    sessionMaxAge: { type: integer, minimum: 60_000 } # ms
    authorizedSessionMaxAge: { type: integer, minimum: 60_000 } # ms
    actionTokenMaxAge: { type: integer, minimum: 60_000 } # ms
    objectUserCacheMaxSize: { type: integer, minimum: 0 }
    apiCallLogCacheDropInterval: { type: integer, minimum: 10_000 } # ms

    # connections
    apiMaxPayloadLength: { type: integer, minimum: 1 }
    apiIdleTimeout: { type: integer, minimum: 0 }
    apiSendPingsAutomatically: { type: boolean }
    apiCompress:
      anyOf:
        - { type: boolean }
        - { type: number }

  required:
    # settings
    - newUserEnabled
    - defaultGravatarImage
    - authCacheMaxSize
    - authCacheLastActivityDropInterval
    - sessionMaxAge
    - actionTokenMaxAge
    - objectUserCacheMaxSize
    - apiCallLogCacheDropInterval

    # connections
    - apiMaxPayloadLength
    - apiIdleTimeout
    - apiSendPingsAutomatically
    - apiCompress

- $id: rpc
  type: object
  properties:
    # connections
    rpcMaxPayloadLength: { type: integer, minimum: 1 }
    rpcIdleTimeout: { type: integer, minimum: 0 }
    rpcSendPingsAutomatically: { type: boolean }
    rpcCompress:
      anyOf:
        - { type: boolean }
        - { type: number }

  required:
    # connections
    - rpcMaxPayloadLength
    - rpcIdleTimeout
    - rpcSendPingsAutomatically
    - rpcCompress

- $id: roles
  type: object
  properties:
    roles:
      type: object
      additionalProperties:
        type: object
        properties:
          name: { type: string }
          description: { type: string }
          default: { type: boolean }
        required: [name, description, default]
        additionalProperties: false
  required: [roles]

- $id: acl
  type: object
  properties:
    acl:
      type: object
      properties:
        types:
          type: object
          additionalProperties:
            type: object
            properties:
              roles:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    name: { type: string }
                    description: { type: string }
                    permissions: { type: object, additionalProperties: { type: boolean } }
                  required: [name, description]
            additionalProperties: false
        objectTypes:
          type: object
          additionalPropertoes:
            type: object
            properties:
              isAclObject: { const: true }
              resolver: { type: [string, "null"] }
            additionalProperties: false
      additionalProperties: false
  required: [acl]

- $id: notifications
  type: object
  properties:
    notifications:
      type: object
      additionalProperties:
        type: object
        properties:
          name: { type: string }
          description: { type: string }
          channels:
            type: object
            properties:
              internal: { type: boolean }
              email: { type: boolean }
              telegram: { type: boolean }
              push: { type: boolean }
            required: [internal, email, telegram, push]
            additionalProperties: false
        required: [name, description, channels]
        additionalProperties: false
  required: [notifications]
